/********************************************************************************
 * File        : Main.c
 * Description : Read Push_Button & Take Action Once Pressed.
 * Author      : Eng: Omar Mohamed Ali 
 * Date        : 30/1/2022
 * Version     : 1.0.0
 *********************************************************************************/
/*********************************************************************************
                          << Using Toggle Function >>
**********************************************************************************/
/*
#include "HLED_INTERFACE.h"
#include "HPB_INTERFACE.h"
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
	HPB_ERROR_STATE_t_PB_Init(PB_1 ,PULL_UP);
	HLED_ERROR_STATE_t_LedInit(B_LED);
	u8 reading=0;
	while(1)
	{
		HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
		if(!reading)
		{
			_delay_ms(50);
			HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
			if(!reading)
			{
				HLED_ERROR_STATE_t_ToggleLed(B_LED);
			}
			do{
				HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
			}while(!reading);
		}
	}
}
*/


/*********************************************************************************
                               << Using Flag >>
**********************************************************************************/
/*
#include "HLED_INTERFACE.h"
#include "HPB_INTERFACE.h"
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
	HPB_ERROR_STATE_t_PB_Init(PB_1 ,PULL_UP);
	HLED_ERROR_STATE_t_LedInit(B_LED);
	u8 flag=0;
	u8 reading=0;
	while(1)
	{
		HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
		if(!reading)
		{
			_delay_ms(50);
			HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
			if(!reading)
			{
				if(0 == flag)
				{
					HLED_ERROR_STATE_t_LedON(B_LED);
					flag=1;
				}
				else if(1 == flag)
				{
					HLED_ERROR_STATE_t_LedOFF(B_LED);
					flag=0;
				}
			}
			do{
				HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
			}while(!reading);
		}
	}
}
*/


/*********************************************************************************
                           << Using Counter Flag >>
**********************************************************************************/
#include "HLED_INTERFACE.h"
#include "HPB_INTERFACE.h"
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
	HPB_ERROR_STATE_t_PB_Init(PB_1 ,PULL_UP);
	HLED_ERROR_STATE_t_LedInit(B_LED);
	u8 Counter_flag=0;
	u8 reading=0;
	while(1)
	{
		HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
		if(!reading)
		{
			_delay_ms(50);
			HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
			if(!reading)
			{	
				if(0 == Counter_flag)
				{
					HLED_ERROR_STATE_t_LedON(B_LED);
				}
				else if(1 == Counter_flag)
				{
					HLED_ERROR_STATE_t_LedOFF(B_LED);
				}
				Counter_flag++;
				if(Counter_flag == 2)
				{
					Counter_flag = 0;
				}
			}
			do{
				HPB_ERROR_STATE_t_PB_Read(PB_1 , &reading);
			}while(!reading);
		}
	}
}